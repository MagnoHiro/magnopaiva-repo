@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

/*
    O "em" é uma unidade de medida, acredito que seria interessante definir uma no seletor de body assim ficaria melhor para assimilar
    Ou pode utilizar o padrão e ir multiplicando linha a linha por utilização da mesma.


    -- Vamos começar pelo responsivo voltado para Iphone (Para me encontrar)

*/

body{
    margin: 0;
    font-family: 'Montserrat', sans-serif;
}

p, blockquote{
    font-size: .9em;/*Sou mais afavor da unidade de medida "rem", o "em" multiplica "por vezes" pela fonte padrão do navegador que é "16px"*/
    line-height: 1.6em;
}

ul{
    list-style-type: none;
    margin: 0;
    padding: 0;
}

.container{
    text-align: center;
    padding: .8em 1.2em;
}

.logo{
    width: 130px; /*"px" ou Pixel é um unidade de medida que não altera dependendo da dimensão da tela*/
}

.hide-mobile{
    display: none;
}

header{
    display: flex;
    justify-content: space-between;
}

.menu{
    width: 25px;
    margin-top: 45%;
}

.server{
    width: 70%;
    margin: 2em auto 2em 25%;
}

h1, .subhead{
    position: relative; /*Relativo a outro elemento*/
    z-index: 3;
}

.subhead{
    font-size: 1.1em;
}

.blue-container{
    width: 100%;
    background: #00C2FF;
    color: #fff;
    margin-top: 15%;
    padding: 4em 0 2em;

    border-top-left-radius: 40px; /*Radius para lado esquerdo somente*/
    transform: skewY(-2deg); /*Altera o grau do elemento, nesse caso negativo*/
}

.blue-container:before{
    content: "";
    width: 40px;
    height: 40px;
    background: #00C2FF;
    position: absolute; /*Pode se mover em todo o documento*/
    top: -39px;
    right: 0;

    z-index: -2;
}

.blue-container:after{
    content: "";
    width: 80px;
    height: 80px;
    background: #fff;    
    position: absolute;
    top: -80px;
    right: 0;

    border-radius: 50%;
    z-index: -1;
}

.blue-container ul{
    transform: skewY(2deg); /*Altera o grau do elemento, neutraliza o valor anterior só focado nos itens dentro do "Ul"*/
}

.blue-container ul li{
    margin-bottom: 3em;
}

.blue-container ul li p{
    padding: 0 .5em;
}

.blue-container img{
    width: 14%;
}

.blue-container ul li:nth-child(3) img{/*Seleciona especificamente, nesse caso o terçeiro "li" elemento*/
    width: 8%;
}

.gray-container{
    background: #F6F6F6;
    padding: 4em 0 2em;
    margin-top: -3%; 
}

.gray-container ul li:frist-child{/*Seleciona o primeiro elemento que aparece dentro do seletor*/
    margin-bottom: 2em;
}

figure{
    margin: 0;
    padding: 0;
}

figcaption{
    font-weight: bold;
    color: #00C2FF;
}

h1{
    margin-top: 7%;
}

.cta{
    width: calc(100% - 1em);
    padding: .5em;
    margin: 3% auto 7%;
    border-radius: 20px;
    display: block;

    background: #00CC80;
    color: #fff;
    text-decoration: none;
    font-size: 1.5em;

    position: relative;
    z-index: 4;
}

.footer-container{
    width: 100%;
    background: #3D444A;
    color: #FFF;
    padding: 3em 0;
    border-top-right-radius: 40px;
    transform: skewY(2deg);
}

.footer-container .container{
    transform: skewY(-2deg);
}

.footer-container:before{
    content: "";
    width: 40px;
    height: 40px;
    background: #3D444A;
    position: absolute;
    top: -39px;
    left: 0;
    z-index: -2;
}

.footer-container:after{
    content: "";
    width: 80px;
    height: 80px;
    background: #FFF;
    position: absolute;
    top: -80px;
    left: 0;
    z-index: -1;
    border-radius: 50%;
}

ul.footer-links{
    margin: 0 auto;
}

ul.footer-links li{
    display: inline-block;
}

ul.footer-links li a{
    color: #9D9D9D;
    font-size: .8em;
}
nav ul{
    position: fixed;
    width: 60%;
    top: 0;
    right: 0;
    text-align: left;
    background: rgb(36, 41, 44);
    height: 100%;
    z-index: 7;
    padding-top: 3em;
}

nav ul li a{
    color: white;
    text-decoration: none;
    display: block;
    width: 100%;
    padding: 1em 2em;
    background-color: rgb(52, 59, 63);
}

nav ul li a:hover{
    background-color: rgb(65, 73, 78);
}

.exit-btn{
    margin-bottom: 1em;
    margin-top: -1.3em;
    text-align: right;
    padding: 0 1.4em;
}

.exit-btn img{
    width: 15px;
    cursor: pointer;
}

@media only screen and (min-width: 600px) {/*Cuidado com os espaçamentos*/

    .server {
        width: 50%;
    }

    h1 {
        font-size: 3em;
        margin: 0;
    }

    .subhead {
        font-size: 1.4em;
        margin-bottom: 12%;
    }

    .blue-container {
        margin: 0;
    }

    .blue-container img {
        width: 10%;
    }

    .blue-container ul li:nth-child(3) img {
        width: 5%;
        margin-top: -6px;
    }

    .blue-container ul{
        display: flex;
        margin-top: -1em;
        align-items: center;
    }

    .blue-container ul li {
        margin-bottom: 0;        
    }

    .blue-container ul li p {
        padding: 0 .8em;
    }

    .gray-container ul {
        display: flex;
    }

    nav ul {
        width: 40%;
    }

}

@media only screen and (min-width: 875px) {

    .subhead {
        margin-bottom: 15%;
    }

    .blue-container ul {
        margin: 0 0 4%;
    }

    .gray-container ul {
        margin: 4% 0 0;
    }

}

@media only screen and (min-width: 1024px) {

    .cta {
        width: 50%;        
    }

    .container {
        width: 80%;
        margin: 0 auto;
    }

    .show-desktop {
        display: block;
        margin: 0 auto 13% auto;
    }

    .hide-desktop {
        display: none;
    }

    nav ul {
        position: inherit;
        width: auto;
        background: none;
        height: auto;
        display: flex;
        padding-top: 0;
    }

    nav ul li {
        float: left;
    }

    nav ul li a {
        color: black;
        background-color: inherit;
        text-align: right;
        padding: 1em 2em;
    }

    nav ul li a:hover {
        background-color: inherit;
    }

    .scroll {
        width: 30px;
        animation: move 1s infinite alternate; /*"move" é o nome que criamo da animação, pode ser colocado qualquer nome. Precisa definir no "@keyframe"*/
    }

    @keyframes move {
        from{
            transform: translateY(0px);
        }

        to{
            transform: translateY(20px);
        }
    }

}

@media only screen and (min-width: 1600px) {

    

}